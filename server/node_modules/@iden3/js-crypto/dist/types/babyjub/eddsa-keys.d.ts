export declare class Signature {
    R8: [bigint, bigint];
    S: bigint;
    constructor(r8: [bigint, bigint], s: bigint);
    static newFromCompressed(buf: Uint8Array): Signature;
    compress(): Uint8Array;
    toString(): string;
    hex(): string;
}
export declare class PublicKey {
    p: [bigint, bigint];
    constructor(p: [bigint, bigint]);
    static newFromCompressed(buf: Uint8Array): PublicKey;
    static newFromHex(hexStr: string): PublicKey;
    compress(): Uint8Array;
    toString(): string;
    hex(): string;
    verifyPoseidon(msg: bigint, sig: Signature): boolean;
}
export declare class PrivateKey {
    sk: Uint8Array;
    constructor(buf: Uint8Array);
    toString(): string;
    hex(): string;
    public(): PublicKey;
    signPoseidon(msg: bigint): Signature;
}
