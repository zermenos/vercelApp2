export type Resolvers = {
    [key: string]: IStateResolver;
};
export interface IStateResolver {
    resolve(id: bigint, state: bigint): Promise<ResolvedState>;
    rootResolve(state: bigint): Promise<ResolvedState>;
}
export type ResolvedState = {
    latest: boolean;
    genesis: boolean;
    state: unknown;
    transitionTimestamp: number | string;
};
export declare class EthStateResolver implements IStateResolver {
    private rpcUrl;
    private contractAddress;
    constructor(rpcUrl: string, contractAddress: string);
    resolve(id: bigint, state: bigint): Promise<ResolvedState>;
    rootResolve(state: bigint): Promise<ResolvedState>;
}
export declare function isGenesisStateId(id: bigint, state: bigint): boolean;
