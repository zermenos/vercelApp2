import { Id, SchemaHash } from '@iden3/js-iden3-core';
import { DocumentLoader } from '@iden3/js-jsonld-merklization';
import { CircuitId, ProofQuery, JsonDocumentObject, VerifiablePresentation } from '@0xpolygonid/js-sdk';
import { VerifyOpts } from './registry';
export declare const userStateError: Error;
export interface Query {
    allowedIssuers: string[];
    credentialSubject: JsonDocumentObject;
    context: string;
    type: string;
    claimID?: string;
    skipClaimRevocationCheck?: boolean;
    proofType?: string;
    groupId?: number;
}
export interface ClaimOutputs {
    issuerId: Id;
    schemaHash: SchemaHash;
    slotIndex?: number;
    operator: number;
    value: bigint[];
    timestamp: number;
    merklized: number;
    claimPathKey?: bigint;
    claimPathNotExists?: number;
    valueArraySize: number;
    isRevocationChecked: number;
    operatorOutput?: bigint;
}
export declare function checkQueryV2Circuits(circuitId: CircuitId.AtomicQueryMTPV2 | CircuitId.AtomicQuerySigV2, query: ProofQuery, outs: ClaimOutputs, schemaLoader: DocumentLoader | undefined, opts: VerifyOpts | undefined, verifiablePresentation: VerifiablePresentation | undefined): Promise<void>;
