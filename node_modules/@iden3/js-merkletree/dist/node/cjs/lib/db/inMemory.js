"use strict";
// in Memory Database implementation
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _InMemoryDB_kvMap, _InMemoryDB_currentRoot;
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryDB = void 0;
const hash_1 = require("../hash/hash");
class InMemoryDB {
    constructor(_prefix) {
        _InMemoryDB_kvMap.set(this, void 0);
        _InMemoryDB_currentRoot.set(this, void 0);
        this.prefix = _prefix;
        __classPrivateFieldSet(this, _InMemoryDB_kvMap, {}, "f");
        __classPrivateFieldSet(this, _InMemoryDB_currentRoot, hash_1.ZERO_HASH, "f");
    }
    async get(k) {
        const kBytes = new Uint8Array([...this.prefix, ...k]);
        const val = __classPrivateFieldGet(this, _InMemoryDB_kvMap, "f")[kBytes.toString()] ? __classPrivateFieldGet(this, _InMemoryDB_kvMap, "f")[kBytes.toString()] : undefined;
        return val;
    }
    async put(k, n) {
        const kBytes = new Uint8Array([...this.prefix, ...k]);
        __classPrivateFieldGet(this, _InMemoryDB_kvMap, "f")[kBytes.toString()] = n;
    }
    async getRoot() {
        return __classPrivateFieldGet(this, _InMemoryDB_currentRoot, "f");
    }
    async setRoot(r) {
        __classPrivateFieldSet(this, _InMemoryDB_currentRoot, r, "f");
    }
}
exports.InMemoryDB = InMemoryDB;
_InMemoryDB_kvMap = new WeakMap(), _InMemoryDB_currentRoot = new WeakMap();
